
shift_matrix.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000c78  00000d0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c78  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000140  0080013a  0080013a  00000d46  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d46  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000db8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000173d  00000000  00000000  00000ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a84  00000000  00000000  000025fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cca  00000000  00000000  00003081  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b4  00000000  00000000  00003d4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000838  00000000  00000000  00004000  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d81  00000000  00000000  00004838  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  000055b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	5a c0       	rjmp	.+180    	; 0xb6 <__ctors_end>
   2:	00 00       	nop
   4:	75 c0       	rjmp	.+234    	; 0xf0 <__bad_interrupt>
   6:	00 00       	nop
   8:	73 c0       	rjmp	.+230    	; 0xf0 <__bad_interrupt>
   a:	00 00       	nop
   c:	71 c0       	rjmp	.+226    	; 0xf0 <__bad_interrupt>
   e:	00 00       	nop
  10:	6f c0       	rjmp	.+222    	; 0xf0 <__bad_interrupt>
  12:	00 00       	nop
  14:	6d c0       	rjmp	.+218    	; 0xf0 <__bad_interrupt>
  16:	00 00       	nop
  18:	6b c0       	rjmp	.+214    	; 0xf0 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	69 c0       	rjmp	.+210    	; 0xf0 <__bad_interrupt>
  1e:	00 00       	nop
  20:	67 c0       	rjmp	.+206    	; 0xf0 <__bad_interrupt>
  22:	00 00       	nop
  24:	65 c0       	rjmp	.+202    	; 0xf0 <__bad_interrupt>
  26:	00 00       	nop
  28:	63 c0       	rjmp	.+198    	; 0xf0 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	61 c0       	rjmp	.+194    	; 0xf0 <__bad_interrupt>
  2e:	00 00       	nop
  30:	5f c0       	rjmp	.+190    	; 0xf0 <__bad_interrupt>
  32:	00 00       	nop
  34:	a6 c0       	rjmp	.+332    	; 0x182 <__vector_13>
  36:	00 00       	nop
  38:	5b c0       	rjmp	.+182    	; 0xf0 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	59 c0       	rjmp	.+178    	; 0xf0 <__bad_interrupt>
  3e:	00 00       	nop
  40:	57 c0       	rjmp	.+174    	; 0xf0 <__bad_interrupt>
  42:	00 00       	nop
  44:	55 c0       	rjmp	.+170    	; 0xf0 <__bad_interrupt>
  46:	00 00       	nop
  48:	53 c0       	rjmp	.+166    	; 0xf0 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	51 c0       	rjmp	.+162    	; 0xf0 <__bad_interrupt>
  4e:	00 00       	nop
  50:	4f c0       	rjmp	.+158    	; 0xf0 <__bad_interrupt>
  52:	00 00       	nop
  54:	4d c0       	rjmp	.+154    	; 0xf0 <__bad_interrupt>
  56:	00 00       	nop
  58:	4b c0       	rjmp	.+150    	; 0xf0 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	49 c0       	rjmp	.+146    	; 0xf0 <__bad_interrupt>
  5e:	00 00       	nop
  60:	47 c0       	rjmp	.+142    	; 0xf0 <__bad_interrupt>
  62:	00 00       	nop
  64:	45 c0       	rjmp	.+138    	; 0xf0 <__bad_interrupt>
  66:	00 00       	nop
  68:	43 c0       	rjmp	.+134    	; 0xf0 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	41 c0       	rjmp	.+130    	; 0xf0 <__bad_interrupt>
  6e:	00 00       	nop
  70:	3f c0       	rjmp	.+126    	; 0xf0 <__bad_interrupt>
  72:	00 00       	nop
  74:	3d c0       	rjmp	.+122    	; 0xf0 <__bad_interrupt>
  76:	00 00       	nop
  78:	3b c0       	rjmp	.+118    	; 0xf0 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	39 c0       	rjmp	.+114    	; 0xf0 <__bad_interrupt>
  7e:	00 00       	nop
  80:	37 c0       	rjmp	.+110    	; 0xf0 <__bad_interrupt>
  82:	00 00       	nop
  84:	35 c0       	rjmp	.+106    	; 0xf0 <__bad_interrupt>
  86:	00 00       	nop
  88:	33 c0       	rjmp	.+102    	; 0xf0 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	65 02       	muls	r22, r21
  8e:	67 02       	muls	r22, r23
  90:	69 02       	muls	r22, r25
  92:	6b 02       	muls	r22, r27
  94:	6d 02       	muls	r22, r29
  96:	6f 02       	muls	r22, r31
  98:	71 02       	muls	r23, r17
  9a:	7e 02       	muls	r23, r30
  9c:	80 02       	muls	r24, r16
  9e:	82 02       	muls	r24, r18
  a0:	84 02       	muls	r24, r20
  a2:	86 02       	muls	r24, r22
  a4:	88 02       	muls	r24, r24
  a6:	8a 02       	muls	r24, r26
  a8:	5a 03       	fmul	r21, r18
  aa:	6d 03       	fmul	r22, r21
  ac:	98 03       	fmulsu	r17, r16
  ae:	83 03       	fmuls	r16, r19
  b0:	ad 03       	fmulsu	r18, r21
  b2:	c1 03       	fmuls	r20, r17
  b4:	d5 03       	fmuls	r21, r21

000000b6 <__ctors_end>:
  b6:	11 24       	eor	r1, r1
  b8:	1f be       	out	0x3f, r1	; 63
  ba:	cf ef       	ldi	r28, 0xFF	; 255
  bc:	d0 e4       	ldi	r29, 0x40	; 64
  be:	de bf       	out	0x3e, r29	; 62
  c0:	cd bf       	out	0x3d, r28	; 61

000000c2 <__do_copy_data>:
  c2:	11 e0       	ldi	r17, 0x01	; 1
  c4:	a0 e0       	ldi	r26, 0x00	; 0
  c6:	b1 e0       	ldi	r27, 0x01	; 1
  c8:	e8 e7       	ldi	r30, 0x78	; 120
  ca:	fc e0       	ldi	r31, 0x0C	; 12
  cc:	00 e0       	ldi	r16, 0x00	; 0
  ce:	0b bf       	out	0x3b, r16	; 59
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <__do_copy_data+0x14>
  d2:	07 90       	elpm	r0, Z+
  d4:	0d 92       	st	X+, r0
  d6:	aa 33       	cpi	r26, 0x3A	; 58
  d8:	b1 07       	cpc	r27, r17
  da:	d9 f7       	brne	.-10     	; 0xd2 <__do_copy_data+0x10>

000000dc <__do_clear_bss>:
  dc:	22 e0       	ldi	r18, 0x02	; 2
  de:	aa e3       	ldi	r26, 0x3A	; 58
  e0:	b1 e0       	ldi	r27, 0x01	; 1
  e2:	01 c0       	rjmp	.+2      	; 0xe6 <.do_clear_bss_start>

000000e4 <.do_clear_bss_loop>:
  e4:	1d 92       	st	X+, r1

000000e6 <.do_clear_bss_start>:
  e6:	aa 37       	cpi	r26, 0x7A	; 122
  e8:	b2 07       	cpc	r27, r18
  ea:	e1 f7       	brne	.-8      	; 0xe4 <.do_clear_bss_loop>
  ec:	29 d4       	rcall	.+2130   	; 0x940 <main>
  ee:	c2 c5       	rjmp	.+2948   	; 0xc74 <_exit>

000000f0 <__bad_interrupt>:
  f0:	87 cf       	rjmp	.-242    	; 0x0 <__vectors>

000000f2 <time>:
  f2:	fc 01       	movw	r30, r24
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	f8 94       	cli
  f8:	60 91 76 02 	lds	r22, 0x0276	; 0x800276 <__system_time>
  fc:	70 91 77 02 	lds	r23, 0x0277	; 0x800277 <__system_time+0x1>
 100:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <__system_time+0x2>
 104:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <__system_time+0x3>
 108:	0f be       	out	0x3f, r0	; 63
 10a:	30 97       	sbiw	r30, 0x00	; 0
 10c:	21 f0       	breq	.+8      	; 0x116 <time+0x24>
 10e:	60 83       	st	Z, r22
 110:	71 83       	std	Z+1, r23	; 0x01
 112:	82 83       	std	Z+2, r24	; 0x02
 114:	93 83       	std	Z+3, r25	; 0x03
 116:	08 95       	ret

00000118 <TimerSet>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
 118:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <_avr_timer_M>
 11c:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <_avr_timer_M+0x1>
 120:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_avr_timer_M+0x2>
 124:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_avr_timer_M+0x3>
 128:	60 93 6b 01 	sts	0x016B, r22	; 0x80016b <_avr_timer_cntcurr>
 12c:	70 93 6c 01 	sts	0x016C, r23	; 0x80016c <_avr_timer_cntcurr+0x1>
 130:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <_avr_timer_cntcurr+0x2>
 134:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <_avr_timer_cntcurr+0x3>
 138:	08 95       	ret

0000013a <TimerOn>:
 13a:	8b e0       	ldi	r24, 0x0B	; 11
 13c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 140:	8d e7       	ldi	r24, 0x7D	; 125
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 148:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 14c:	82 e0       	ldi	r24, 0x02	; 2
 14e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 152:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 156:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 15a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_avr_timer_M>
 15e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_avr_timer_M+0x1>
 162:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_avr_timer_M+0x2>
 166:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_avr_timer_M+0x3>
 16a:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <_avr_timer_cntcurr>
 16e:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <_avr_timer_cntcurr+0x1>
 172:	a0 93 6d 01 	sts	0x016D, r26	; 0x80016d <_avr_timer_cntcurr+0x2>
 176:	b0 93 6e 01 	sts	0x016E, r27	; 0x80016e <_avr_timer_cntcurr+0x3>
 17a:	8f b7       	in	r24, 0x3f	; 63
 17c:	80 68       	ori	r24, 0x80	; 128
 17e:	8f bf       	out	0x3f, r24	; 63
 180:	08 95       	ret

00000182 <__vector_13>:
 182:	1f 92       	push	r1
 184:	0f 92       	push	r0
 186:	0f b6       	in	r0, 0x3f	; 63
 188:	0f 92       	push	r0
 18a:	11 24       	eor	r1, r1
 18c:	8f 93       	push	r24
 18e:	9f 93       	push	r25
 190:	af 93       	push	r26
 192:	bf 93       	push	r27
 194:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <_avr_timer_cntcurr>
 198:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <_avr_timer_cntcurr+0x1>
 19c:	a0 91 6d 01 	lds	r26, 0x016D	; 0x80016d <_avr_timer_cntcurr+0x2>
 1a0:	b0 91 6e 01 	lds	r27, 0x016E	; 0x80016e <_avr_timer_cntcurr+0x3>
 1a4:	01 97       	sbiw	r24, 0x01	; 1
 1a6:	a1 09       	sbc	r26, r1
 1a8:	b1 09       	sbc	r27, r1
 1aa:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <_avr_timer_cntcurr>
 1ae:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <_avr_timer_cntcurr+0x1>
 1b2:	a0 93 6d 01 	sts	0x016D, r26	; 0x80016d <_avr_timer_cntcurr+0x2>
 1b6:	b0 93 6e 01 	sts	0x016E, r27	; 0x80016e <_avr_timer_cntcurr+0x3>
 1ba:	89 2b       	or	r24, r25
 1bc:	8a 2b       	or	r24, r26
 1be:	8b 2b       	or	r24, r27
 1c0:	99 f4       	brne	.+38     	; 0x1e8 <__vector_13+0x66>
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <TimerFlag>
 1c8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_avr_timer_M>
 1cc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_avr_timer_M+0x1>
 1d0:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_avr_timer_M+0x2>
 1d4:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_avr_timer_M+0x3>
 1d8:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <_avr_timer_cntcurr>
 1dc:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <_avr_timer_cntcurr+0x1>
 1e0:	a0 93 6d 01 	sts	0x016D, r26	; 0x80016d <_avr_timer_cntcurr+0x2>
 1e4:	b0 93 6e 01 	sts	0x016E, r27	; 0x80016e <_avr_timer_cntcurr+0x3>
 1e8:	bf 91       	pop	r27
 1ea:	af 91       	pop	r26
 1ec:	9f 91       	pop	r25
 1ee:	8f 91       	pop	r24
 1f0:	0f 90       	pop	r0
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	0f 90       	pop	r0
 1f6:	1f 90       	pop	r1
 1f8:	18 95       	reti

000001fa <send>:
 1fa:	20 e0       	ldi	r18, 0x00	; 0
 1fc:	30 e0       	ldi	r19, 0x00	; 0
 1fe:	28 30       	cpi	r18, 0x08	; 8
 200:	31 05       	cpc	r19, r1
 202:	30 f4       	brcc	.+12     	; 0x210 <send+0x16>
 204:	99 23       	and	r25, r25
 206:	14 f4       	brge	.+4      	; 0x20c <send+0x12>
 208:	28 9a       	sbi	0x05, 0	; 5
 20a:	07 c0       	rjmp	.+14     	; 0x21a <send+0x20>
 20c:	28 98       	cbi	0x05, 0	; 5
 20e:	05 c0       	rjmp	.+10     	; 0x21a <send+0x20>
 210:	99 23       	and	r25, r25
 212:	14 f4       	brge	.+4      	; 0x218 <send+0x1e>
 214:	28 98       	cbi	0x05, 0	; 5
 216:	01 c0       	rjmp	.+2      	; 0x21a <send+0x20>
 218:	28 9a       	sbi	0x05, 0	; 5
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	2a 9a       	sbi	0x05, 2	; 5
 220:	2a 98       	cbi	0x05, 2	; 5
 222:	2f 5f       	subi	r18, 0xFF	; 255
 224:	3f 4f       	sbci	r19, 0xFF	; 255
 226:	20 31       	cpi	r18, 0x10	; 16
 228:	31 05       	cpc	r19, r1
 22a:	49 f7       	brne	.-46     	; 0x1fe <send+0x4>
 22c:	29 9a       	sbi	0x05, 1	; 5
 22e:	29 98       	cbi	0x05, 1	; 5
 230:	08 95       	ret

00000232 <delay_ms>:
 232:	18 16       	cp	r1, r24
 234:	19 06       	cpc	r1, r25
 236:	5c f0       	brlt	.+22     	; 0x24e <delay_ms+0x1c>
 238:	08 95       	ret
 23a:	00 00       	nop
 23c:	21 50       	subi	r18, 0x01	; 1
 23e:	31 09       	sbc	r19, r1
 240:	e1 f7       	brne	.-8      	; 0x23a <delay_ms+0x8>
 242:	4f 5f       	subi	r20, 0xFF	; 255
 244:	5f 4f       	sbci	r21, 0xFF	; 255
 246:	84 17       	cp	r24, r20
 248:	95 07       	cpc	r25, r21
 24a:	19 f4       	brne	.+6      	; 0x252 <delay_ms+0x20>
 24c:	08 95       	ret
 24e:	40 e0       	ldi	r20, 0x00	; 0
 250:	50 e0       	ldi	r21, 0x00	; 0
 252:	27 e0       	ldi	r18, 0x07	; 7
 254:	33 e0       	ldi	r19, 0x03	; 3
 256:	f1 cf       	rjmp	.-30     	; 0x23a <delay_ms+0x8>

00000258 <LCD_WriteCommand>:
 258:	41 98       	cbi	0x08, 1	; 8
 25a:	8b b9       	out	0x0b, r24	; 11
 25c:	40 9a       	sbi	0x08, 0	; 8
 25e:	00 00       	nop
 260:	40 98       	cbi	0x08, 0	; 8
 262:	82 e0       	ldi	r24, 0x02	; 2
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	e5 cf       	rjmp	.-54     	; 0x232 <delay_ms>
 268:	08 95       	ret

0000026a <LCD_ClearScreen>:
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	f4 cf       	rjmp	.-24     	; 0x258 <LCD_WriteCommand>
 270:	08 95       	ret

00000272 <LCD_Cursor>:
 272:	81 31       	cpi	r24, 0x11	; 17
 274:	18 f4       	brcc	.+6      	; 0x27c <LCD_Cursor+0xa>
 276:	81 58       	subi	r24, 0x81	; 129
 278:	ef cf       	rjmp	.-34     	; 0x258 <LCD_WriteCommand>
 27a:	08 95       	ret
 27c:	81 55       	subi	r24, 0x51	; 81
 27e:	ec cf       	rjmp	.-40     	; 0x258 <LCD_WriteCommand>
 280:	08 95       	ret

00000282 <LCD_init>:
 282:	84 e6       	ldi	r24, 0x64	; 100
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	d5 df       	rcall	.-86     	; 0x232 <delay_ms>
 288:	88 e3       	ldi	r24, 0x38	; 56
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	e5 df       	rcall	.-54     	; 0x258 <LCD_WriteCommand>
 28e:	86 e0       	ldi	r24, 0x06	; 6
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	e2 df       	rcall	.-60     	; 0x258 <LCD_WriteCommand>
 294:	8f e0       	ldi	r24, 0x0F	; 15
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	df df       	rcall	.-66     	; 0x258 <LCD_WriteCommand>
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	dc df       	rcall	.-72     	; 0x258 <LCD_WriteCommand>
 2a0:	8a e0       	ldi	r24, 0x0A	; 10
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	c6 cf       	rjmp	.-116    	; 0x232 <delay_ms>
 2a6:	08 95       	ret

000002a8 <LCD_WriteData>:
 2a8:	41 9a       	sbi	0x08, 1	; 8
 2aa:	8b b9       	out	0x0b, r24	; 11
 2ac:	40 9a       	sbi	0x08, 0	; 8
 2ae:	00 00       	nop
 2b0:	40 98       	cbi	0x08, 0	; 8
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	bd cf       	rjmp	.-134    	; 0x232 <delay_ms>
 2b8:	08 95       	ret

000002ba <LCD_DisplayString>:
 2ba:	1f 93       	push	r17
 2bc:	cf 93       	push	r28
 2be:	df 93       	push	r29
 2c0:	80 31       	cpi	r24, 0x10	; 16
 2c2:	38 f0       	brcs	.+14     	; 0x2d2 <LCD_DisplayString+0x18>
 2c4:	fb 01       	movw	r30, r22
 2c6:	90 81       	ld	r25, Z
 2c8:	99 23       	and	r25, r25
 2ca:	21 f1       	breq	.+72     	; 0x314 <LCD_DisplayString+0x5a>
 2cc:	81 32       	cpi	r24, 0x21	; 33
 2ce:	a8 f0       	brcs	.+42     	; 0x2fa <LCD_DisplayString+0x40>
 2d0:	21 c0       	rjmp	.+66     	; 0x314 <LCD_DisplayString+0x5a>
 2d2:	fb 01       	movw	r30, r22
 2d4:	90 81       	ld	r25, Z
 2d6:	99 23       	and	r25, r25
 2d8:	e9 f0       	breq	.+58     	; 0x314 <LCD_DisplayString+0x5a>
 2da:	81 31       	cpi	r24, 0x11	; 17
 2dc:	d8 f4       	brcc	.+54     	; 0x314 <LCD_DisplayString+0x5a>
 2de:	eb 01       	movw	r28, r22
 2e0:	11 e0       	ldi	r17, 0x01	; 1
 2e2:	18 0f       	add	r17, r24
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	c5 df       	rcall	.-118    	; 0x272 <LCD_Cursor>
 2e8:	89 91       	ld	r24, Y+
 2ea:	de df       	rcall	.-68     	; 0x2a8 <LCD_WriteData>
 2ec:	88 81       	ld	r24, Y
 2ee:	88 23       	and	r24, r24
 2f0:	89 f0       	breq	.+34     	; 0x314 <LCD_DisplayString+0x5a>
 2f2:	81 2f       	mov	r24, r17
 2f4:	11 31       	cpi	r17, 0x11	; 17
 2f6:	a1 f7       	brne	.-24     	; 0x2e0 <LCD_DisplayString+0x26>
 2f8:	0d c0       	rjmp	.+26     	; 0x314 <LCD_DisplayString+0x5a>
 2fa:	eb 01       	movw	r28, r22
 2fc:	11 e0       	ldi	r17, 0x01	; 1
 2fe:	18 0f       	add	r17, r24
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	b7 df       	rcall	.-146    	; 0x272 <LCD_Cursor>
 304:	89 91       	ld	r24, Y+
 306:	d0 df       	rcall	.-96     	; 0x2a8 <LCD_WriteData>
 308:	88 81       	ld	r24, Y
 30a:	88 23       	and	r24, r24
 30c:	19 f0       	breq	.+6      	; 0x314 <LCD_DisplayString+0x5a>
 30e:	81 2f       	mov	r24, r17
 310:	11 32       	cpi	r17, 0x21	; 33
 312:	a1 f7       	brne	.-24     	; 0x2fc <LCD_DisplayString+0x42>
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	1f 91       	pop	r17
 31a:	08 95       	ret

0000031c <ADC_init>:
 31c:	ea e7       	ldi	r30, 0x7A	; 122
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	87 e8       	ldi	r24, 0x87	; 135
 322:	80 83       	st	Z, r24
 324:	ac e7       	ldi	r26, 0x7C	; 124
 326:	b0 e0       	ldi	r27, 0x00	; 0
 328:	8c 91       	ld	r24, X
 32a:	80 64       	ori	r24, 0x40	; 64
 32c:	8c 93       	st	X, r24
 32e:	80 81       	ld	r24, Z
 330:	80 64       	ori	r24, 0x40	; 64
 332:	80 83       	st	Z, r24
 334:	08 95       	ret

00000336 <ADCNum>:
 336:	ec e7       	ldi	r30, 0x7C	; 124
 338:	f0 e0       	ldi	r31, 0x00	; 0
 33a:	90 81       	ld	r25, Z
 33c:	98 7f       	andi	r25, 0xF8	; 248
 33e:	87 70       	andi	r24, 0x07	; 7
 340:	89 2b       	or	r24, r25
 342:	80 83       	st	Z, r24
 344:	ea e7       	ldi	r30, 0x7A	; 122
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	80 81       	ld	r24, Z
 34a:	80 64       	ori	r24, 0x40	; 64
 34c:	80 83       	st	Z, r24
 34e:	80 81       	ld	r24, Z
 350:	86 fd       	sbrc	r24, 6
 352:	fd cf       	rjmp	.-6      	; 0x34e <ADCNum+0x18>
 354:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 358:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 35c:	08 95       	ret

0000035e <GetADC_Tick>:
 35e:	89 2b       	or	r24, r25
 360:	a1 f5       	brne	.+104    	; 0x3ca <GetADC_Tick+0x6c>
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	e8 df       	rcall	.-48     	; 0x336 <ADCNum>
 366:	80 93 71 02 	sts	0x0271, r24	; 0x800271 <y_direction>
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	e4 df       	rcall	.-56     	; 0x336 <ADCNum>
 36e:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <x_direction>
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	81 3a       	cpi	r24, 0xA1	; 161
 376:	91 05       	cpc	r25, r1
 378:	34 f0       	brlt	.+12     	; 0x386 <GetADC_Tick+0x28>
 37a:	84 e0       	ldi	r24, 0x04	; 4
 37c:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <direction>
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	08 95       	ret
 386:	20 91 71 02 	lds	r18, 0x0271	; 0x800271 <y_direction>
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	21 3a       	cpi	r18, 0xA1	; 161
 38e:	31 05       	cpc	r19, r1
 390:	34 f0       	brlt	.+12     	; 0x39e <GetADC_Tick+0x40>
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <direction>
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	08 95       	ret
 39e:	21 31       	cpi	r18, 0x11	; 17
 3a0:	31 05       	cpc	r19, r1
 3a2:	34 f4       	brge	.+12     	; 0x3b0 <GetADC_Tick+0x52>
 3a4:	82 e0       	ldi	r24, 0x02	; 2
 3a6:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <direction>
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	08 95       	ret
 3b0:	41 97       	sbiw	r24, 0x11	; 17
 3b2:	34 f4       	brge	.+12     	; 0x3c0 <GetADC_Tick+0x62>
 3b4:	83 e0       	ldi	r24, 0x03	; 3
 3b6:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <direction>
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	08 95       	ret
 3c0:	10 92 6a 01 	sts	0x016A, r1	; 0x80016a <direction>
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	08 95       	ret
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	08 95       	ret

000003d0 <print_score>:
 3d0:	0f 93       	push	r16
 3d2:	1f 93       	push	r17
 3d4:	cf 93       	push	r28
 3d6:	df 93       	push	r29
 3d8:	d8 2f       	mov	r29, r24
 3da:	86 2f       	mov	r24, r22
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	6a e0       	ldi	r22, 0x0A	; 10
 3e0:	70 e0       	ldi	r23, 0x00	; 0
 3e2:	66 d3       	rcall	.+1740   	; 0xab0 <__divmodhi4>
 3e4:	8b 01       	movw	r16, r22
 3e6:	c8 2f       	mov	r28, r24
 3e8:	67 2b       	or	r22, r23
 3ea:	69 f4       	brne	.+26     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3ec:	89 2b       	or	r24, r25
 3ee:	29 f4       	brne	.+10     	; 0x3fa <print_score+0x2a>
 3f0:	8d 2f       	mov	r24, r29
 3f2:	3f df       	rcall	.-386    	; 0x272 <LCD_Cursor>
 3f4:	80 e3       	ldi	r24, 0x30	; 48
 3f6:	58 df       	rcall	.-336    	; 0x2a8 <LCD_WriteData>
 3f8:	11 c0       	rjmp	.+34     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fa:	8d 2f       	mov	r24, r29
 3fc:	3a df       	rcall	.-396    	; 0x272 <LCD_Cursor>
 3fe:	80 e3       	ldi	r24, 0x30	; 48
 400:	8c 0f       	add	r24, r28
 402:	52 df       	rcall	.-348    	; 0x2a8 <LCD_WriteData>
 404:	0b c0       	rjmp	.+22     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 406:	8d 2f       	mov	r24, r29
 408:	34 df       	rcall	.-408    	; 0x272 <LCD_Cursor>
 40a:	80 e3       	ldi	r24, 0x30	; 48
 40c:	80 0f       	add	r24, r16
 40e:	4c df       	rcall	.-360    	; 0x2a8 <LCD_WriteData>
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	8d 0f       	add	r24, r29
 414:	2e df       	rcall	.-420    	; 0x272 <LCD_Cursor>
 416:	80 e3       	ldi	r24, 0x30	; 48
 418:	8c 0f       	add	r24, r28
 41a:	46 df       	rcall	.-372    	; 0x2a8 <LCD_WriteData>
 41c:	df 91       	pop	r29
 41e:	cf 91       	pop	r28
 420:	1f 91       	pop	r17
 422:	0f 91       	pop	r16
 424:	08 95       	ret

00000426 <add_fruit>:
 426:	1f 93       	push	r17
 428:	cf 93       	push	r28
 42a:	df 93       	push	r29
 42c:	e4 e7       	ldi	r30, 0x74	; 116
 42e:	f2 e0       	ldi	r31, 0x02	; 2
 430:	10 81       	ld	r17, Z
 432:	d1 81       	ldd	r29, Z+1	; 0x01
 434:	d6 d3       	rcall	.+1964   	; 0xbe2 <rand>
 436:	87 70       	andi	r24, 0x07	; 7
 438:	90 78       	andi	r25, 0x80	; 128
 43a:	99 23       	and	r25, r25
 43c:	24 f4       	brge	.+8      	; 0x446 <add_fruit+0x20>
 43e:	01 97       	sbiw	r24, 0x01	; 1
 440:	88 6f       	ori	r24, 0xF8	; 248
 442:	9f 6f       	ori	r25, 0xFF	; 255
 444:	01 96       	adiw	r24, 0x01	; 1
 446:	c1 e0       	ldi	r28, 0x01	; 1
 448:	c8 0f       	add	r28, r24
 44a:	1c 17       	cp	r17, r28
 44c:	99 f3       	breq	.-26     	; 0x434 <add_fruit+0xe>
 44e:	c9 d3       	rcall	.+1938   	; 0xbe2 <rand>
 450:	87 70       	andi	r24, 0x07	; 7
 452:	90 78       	andi	r25, 0x80	; 128
 454:	99 23       	and	r25, r25
 456:	24 f4       	brge	.+8      	; 0x460 <add_fruit+0x3a>
 458:	01 97       	sbiw	r24, 0x01	; 1
 45a:	88 6f       	ori	r24, 0xF8	; 248
 45c:	9f 6f       	ori	r25, 0xFF	; 255
 45e:	01 96       	adiw	r24, 0x01	; 1
 460:	8f 5f       	subi	r24, 0xFF	; 255
 462:	d8 17       	cp	r29, r24
 464:	a1 f3       	breq	.-24     	; 0x44e <add_fruit+0x28>
 466:	e4 e7       	ldi	r30, 0x74	; 116
 468:	f2 e0       	ldi	r31, 0x02	; 2
 46a:	c0 83       	st	Z, r28
 46c:	81 83       	std	Z+1, r24	; 0x01
 46e:	df 91       	pop	r29
 470:	cf 91       	pop	r28
 472:	1f 91       	pop	r17
 474:	08 95       	ret

00000476 <check_collision>:
 476:	e1 e7       	ldi	r30, 0x71	; 113
 478:	f1 e0       	ldi	r31, 0x01	; 1
 47a:	90 81       	ld	r25, Z
 47c:	41 81       	ldd	r20, Z+1	; 0x01
 47e:	20 91 69 01 	lds	r18, 0x0169	; 0x800169 <snakeLength>
 482:	22 30       	cpi	r18, 0x02	; 2
 484:	c0 f0       	brcs	.+48     	; 0x4b6 <check_collision+0x40>
 486:	e5 e7       	ldi	r30, 0x75	; 117
 488:	f1 e0       	ldi	r31, 0x01	; 1
 48a:	22 50       	subi	r18, 0x02	; 2
 48c:	30 e0       	ldi	r19, 0x00	; 0
 48e:	22 0f       	add	r18, r18
 490:	33 1f       	adc	r19, r19
 492:	22 0f       	add	r18, r18
 494:	33 1f       	adc	r19, r19
 496:	27 58       	subi	r18, 0x87	; 135
 498:	3e 4f       	sbci	r19, 0xFE	; 254
 49a:	80 81       	ld	r24, Z
 49c:	98 13       	cpse	r25, r24
 49e:	07 c0       	rjmp	.+14     	; 0x4ae <check_collision+0x38>
 4a0:	81 81       	ldd	r24, Z+1	; 0x01
 4a2:	48 13       	cpse	r20, r24
 4a4:	04 c0       	rjmp	.+8      	; 0x4ae <check_collision+0x38>
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <Loser>
 4ac:	08 95       	ret
 4ae:	34 96       	adiw	r30, 0x04	; 4
 4b0:	e2 17       	cp	r30, r18
 4b2:	f3 07       	cpc	r31, r19
 4b4:	91 f7       	brne	.-28     	; 0x49a <check_collision+0x24>
 4b6:	08 95       	ret

000004b8 <getCoordinates>:
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	fc 01       	movw	r30, r24
 4bc:	32 97       	sbiw	r30, 0x02	; 2
 4be:	e7 30       	cpi	r30, 0x07	; 7
 4c0:	f1 05       	cpc	r31, r1
 4c2:	88 f4       	brcc	.+34     	; 0x4e6 <getCoordinates+0x2e>
 4c4:	ea 5b       	subi	r30, 0xBA	; 186
 4c6:	ff 4f       	sbci	r31, 0xFF	; 255
 4c8:	28 c3       	rjmp	.+1616   	; 0xb1a <__tablejump2__>
 4ca:	22 e0       	ldi	r18, 0x02	; 2
 4cc:	0d c0       	rjmp	.+26     	; 0x4e8 <getCoordinates+0x30>
 4ce:	24 e0       	ldi	r18, 0x04	; 4
 4d0:	0b c0       	rjmp	.+22     	; 0x4e8 <getCoordinates+0x30>
 4d2:	28 e0       	ldi	r18, 0x08	; 8
 4d4:	09 c0       	rjmp	.+18     	; 0x4e8 <getCoordinates+0x30>
 4d6:	20 e1       	ldi	r18, 0x10	; 16
 4d8:	07 c0       	rjmp	.+14     	; 0x4e8 <getCoordinates+0x30>
 4da:	20 e2       	ldi	r18, 0x20	; 32
 4dc:	05 c0       	rjmp	.+10     	; 0x4e8 <getCoordinates+0x30>
 4de:	20 e4       	ldi	r18, 0x40	; 64
 4e0:	03 c0       	rjmp	.+6      	; 0x4e8 <getCoordinates+0x30>
 4e2:	20 e8       	ldi	r18, 0x80	; 128
 4e4:	01 c0       	rjmp	.+2      	; 0x4e8 <getCoordinates+0x30>
 4e6:	21 e0       	ldi	r18, 0x01	; 1
 4e8:	86 2f       	mov	r24, r22
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	fc 01       	movw	r30, r24
 4ee:	32 97       	sbiw	r30, 0x02	; 2
 4f0:	e7 30       	cpi	r30, 0x07	; 7
 4f2:	f1 05       	cpc	r31, r1
 4f4:	88 f4       	brcc	.+34     	; 0x518 <getCoordinates+0x60>
 4f6:	e3 5b       	subi	r30, 0xB3	; 179
 4f8:	ff 4f       	sbci	r31, 0xFF	; 255
 4fa:	0f c3       	rjmp	.+1566   	; 0xb1a <__tablejump2__>
 4fc:	82 e0       	ldi	r24, 0x02	; 2
 4fe:	0d c0       	rjmp	.+26     	; 0x51a <getCoordinates+0x62>
 500:	84 e0       	ldi	r24, 0x04	; 4
 502:	0b c0       	rjmp	.+22     	; 0x51a <getCoordinates+0x62>
 504:	88 e0       	ldi	r24, 0x08	; 8
 506:	09 c0       	rjmp	.+18     	; 0x51a <getCoordinates+0x62>
 508:	80 e1       	ldi	r24, 0x10	; 16
 50a:	07 c0       	rjmp	.+14     	; 0x51a <getCoordinates+0x62>
 50c:	80 e2       	ldi	r24, 0x20	; 32
 50e:	05 c0       	rjmp	.+10     	; 0x51a <getCoordinates+0x62>
 510:	80 e4       	ldi	r24, 0x40	; 64
 512:	03 c0       	rjmp	.+6      	; 0x51a <getCoordinates+0x62>
 514:	80 e8       	ldi	r24, 0x80	; 128
 516:	01 c0       	rjmp	.+2      	; 0x51a <getCoordinates+0x62>
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	92 2b       	or	r25, r18
 51e:	08 95       	ret

00000520 <PrintSnake_Tick>:
 520:	ef 92       	push	r14
 522:	ff 92       	push	r15
 524:	0f 93       	push	r16
 526:	1f 93       	push	r17
 528:	cf 93       	push	r28
 52a:	df 93       	push	r29
 52c:	89 2b       	or	r24, r25
 52e:	01 f5       	brne	.+64     	; 0x570 <PrintSnake_Tick+0x50>
 530:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <snakeLength>
 534:	88 23       	and	r24, r24
 536:	e1 f0       	breq	.+56     	; 0x570 <PrintSnake_Tick+0x50>
 538:	c1 e7       	ldi	r28, 0x71	; 113
 53a:	d1 e0       	ldi	r29, 0x01	; 1
 53c:	00 e0       	ldi	r16, 0x00	; 0
 53e:	10 e0       	ldi	r17, 0x00	; 0
 540:	0f 2e       	mov	r0, r31
 542:	f4 e7       	ldi	r31, 0x74	; 116
 544:	ef 2e       	mov	r14, r31
 546:	f2 e0       	ldi	r31, 0x02	; 2
 548:	ff 2e       	mov	r15, r31
 54a:	f0 2d       	mov	r31, r0
 54c:	69 81       	ldd	r22, Y+1	; 0x01
 54e:	88 81       	ld	r24, Y
 550:	b3 df       	rcall	.-154    	; 0x4b8 <getCoordinates>
 552:	53 de       	rcall	.-858    	; 0x1fa <send>
 554:	f7 01       	movw	r30, r14
 556:	61 81       	ldd	r22, Z+1	; 0x01
 558:	80 81       	ld	r24, Z
 55a:	ae df       	rcall	.-164    	; 0x4b8 <getCoordinates>
 55c:	4e de       	rcall	.-868    	; 0x1fa <send>
 55e:	0f 5f       	subi	r16, 0xFF	; 255
 560:	1f 4f       	sbci	r17, 0xFF	; 255
 562:	24 96       	adiw	r28, 0x04	; 4
 564:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <snakeLength>
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	08 17       	cp	r16, r24
 56c:	19 07       	cpc	r17, r25
 56e:	74 f3       	brlt	.-36     	; 0x54c <PrintSnake_Tick+0x2c>
 570:	80 e0       	ldi	r24, 0x00	; 0
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	df 91       	pop	r29
 576:	cf 91       	pop	r28
 578:	1f 91       	pop	r17
 57a:	0f 91       	pop	r16
 57c:	ff 90       	pop	r15
 57e:	ef 90       	pop	r14
 580:	08 95       	ret

00000582 <add_body>:
 582:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <snakeLength>
 586:	e9 2f       	mov	r30, r25
 588:	f0 e0       	ldi	r31, 0x00	; 0
 58a:	ee 0f       	add	r30, r30
 58c:	ff 1f       	adc	r31, r31
 58e:	ee 0f       	add	r30, r30
 590:	ff 1f       	adc	r31, r31
 592:	ef 58       	subi	r30, 0x8F	; 143
 594:	fe 4f       	sbci	r31, 0xFE	; 254
 596:	80 83       	st	Z, r24
 598:	61 83       	std	Z+1, r22	; 0x01
 59a:	9f 5f       	subi	r25, 0xFF	; 255
 59c:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <snakeLength>
 5a0:	08 95       	ret

000005a2 <updatePositions>:
 5a2:	ff 92       	push	r15
 5a4:	0f 93       	push	r16
 5a6:	1f 93       	push	r17
 5a8:	cf 93       	push	r28
 5aa:	df 93       	push	r29
 5ac:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <snakeLength>
 5b0:	99 23       	and	r25, r25
 5b2:	09 f4       	brne	.+2      	; 0x5b6 <updatePositions+0x14>
 5b4:	4d c0       	rjmp	.+154    	; 0x650 <updatePositions+0xae>
 5b6:	f6 2e       	mov	r15, r22
 5b8:	08 2f       	mov	r16, r24
 5ba:	10 e0       	ldi	r17, 0x00	; 0
 5bc:	c4 e7       	ldi	r28, 0x74	; 116
 5be:	d2 e0       	ldi	r29, 0x02	; 2
 5c0:	21 2f       	mov	r18, r17
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	f9 01       	movw	r30, r18
 5c6:	ee 0f       	add	r30, r30
 5c8:	ff 1f       	adc	r31, r31
 5ca:	ee 0f       	add	r30, r30
 5cc:	ff 1f       	adc	r31, r31
 5ce:	ef 58       	subi	r30, 0x8F	; 143
 5d0:	fe 4f       	sbci	r31, 0xFE	; 254
 5d2:	80 81       	ld	r24, Z
 5d4:	82 83       	std	Z+2, r24	; 0x02
 5d6:	81 81       	ldd	r24, Z+1	; 0x01
 5d8:	83 83       	std	Z+3, r24	; 0x03
 5da:	11 11       	cpse	r17, r1
 5dc:	20 c0       	rjmp	.+64     	; 0x61e <updatePositions+0x7c>
 5de:	22 0f       	add	r18, r18
 5e0:	33 1f       	adc	r19, r19
 5e2:	22 0f       	add	r18, r18
 5e4:	33 1f       	adc	r19, r19
 5e6:	f9 01       	movw	r30, r18
 5e8:	ef 58       	subi	r30, 0x8F	; 143
 5ea:	fe 4f       	sbci	r31, 0xFE	; 254
 5ec:	00 83       	st	Z, r16
 5ee:	f1 82       	std	Z+1, r15	; 0x01
 5f0:	42 df       	rcall	.-380    	; 0x476 <check_collision>
 5f2:	88 81       	ld	r24, Y
 5f4:	08 13       	cpse	r16, r24
 5f6:	26 c0       	rjmp	.+76     	; 0x644 <updatePositions+0xa2>
 5f8:	89 81       	ldd	r24, Y+1	; 0x01
 5fa:	f8 12       	cpse	r15, r24
 5fc:	23 c0       	rjmp	.+70     	; 0x644 <updatePositions+0xa2>
 5fe:	e0 91 69 01 	lds	r30, 0x0169	; 0x800169 <snakeLength>
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	ee 0f       	add	r30, r30
 606:	ff 1f       	adc	r31, r31
 608:	ee 0f       	add	r30, r30
 60a:	ff 1f       	adc	r31, r31
 60c:	e3 59       	subi	r30, 0x93	; 147
 60e:	fe 4f       	sbci	r31, 0xFE	; 254
 610:	63 81       	ldd	r22, Z+3	; 0x03
 612:	70 e0       	ldi	r23, 0x00	; 0
 614:	82 81       	ldd	r24, Z+2	; 0x02
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	b4 df       	rcall	.-152    	; 0x582 <add_body>
 61a:	05 df       	rcall	.-502    	; 0x426 <add_fruit>
 61c:	13 c0       	rjmp	.+38     	; 0x644 <updatePositions+0xa2>
 61e:	d9 01       	movw	r26, r18
 620:	aa 0f       	add	r26, r26
 622:	bb 1f       	adc	r27, r27
 624:	aa 0f       	add	r26, r26
 626:	bb 1f       	adc	r27, r27
 628:	af 58       	subi	r26, 0x8F	; 143
 62a:	be 4f       	sbci	r27, 0xFE	; 254
 62c:	22 0f       	add	r18, r18
 62e:	33 1f       	adc	r19, r19
 630:	22 0f       	add	r18, r18
 632:	33 1f       	adc	r19, r19
 634:	f9 01       	movw	r30, r18
 636:	e3 59       	subi	r30, 0x93	; 147
 638:	fe 4f       	sbci	r31, 0xFE	; 254
 63a:	82 81       	ldd	r24, Z+2	; 0x02
 63c:	8c 93       	st	X, r24
 63e:	83 81       	ldd	r24, Z+3	; 0x03
 640:	11 96       	adiw	r26, 0x01	; 1
 642:	8c 93       	st	X, r24
 644:	1f 5f       	subi	r17, 0xFF	; 255
 646:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <snakeLength>
 64a:	18 17       	cp	r17, r24
 64c:	08 f4       	brcc	.+2      	; 0x650 <updatePositions+0xae>
 64e:	b8 cf       	rjmp	.-144    	; 0x5c0 <updatePositions+0x1e>
 650:	df 91       	pop	r29
 652:	cf 91       	pop	r28
 654:	1f 91       	pop	r17
 656:	0f 91       	pop	r16
 658:	ff 90       	pop	r15
 65a:	08 95       	ret

0000065c <updateGame>:
 65c:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <snakeLength>
 660:	94 30       	cpi	r25, 0x04	; 4
 662:	18 f4       	brcc	.+6      	; 0x66a <updateGame+0xe>
 664:	10 92 73 02 	sts	0x0273, r1	; 0x800273 <Game_Score>
 668:	03 c0       	rjmp	.+6      	; 0x670 <updateGame+0x14>
 66a:	93 50       	subi	r25, 0x03	; 3
 66c:	90 93 73 02 	sts	0x0273, r25	; 0x800273 <Game_Score>
 670:	98 df       	rcall	.-208    	; 0x5a2 <updatePositions>
 672:	fb dd       	rcall	.-1034   	; 0x26a <LCD_ClearScreen>
 674:	67 e1       	ldi	r22, 0x17	; 23
 676:	71 e0       	ldi	r23, 0x01	; 1
 678:	81 e0       	ldi	r24, 0x01	; 1
 67a:	1f de       	rcall	.-962    	; 0x2ba <LCD_DisplayString>
 67c:	60 91 73 02 	lds	r22, 0x0273	; 0x800273 <Game_Score>
 680:	88 e0       	ldi	r24, 0x08	; 8
 682:	a6 de       	rcall	.-692    	; 0x3d0 <print_score>
 684:	62 e1       	ldi	r22, 0x12	; 18
 686:	71 e0       	ldi	r23, 0x01	; 1
 688:	81 e1       	ldi	r24, 0x11	; 17
 68a:	17 de       	rcall	.-978    	; 0x2ba <LCD_DisplayString>
 68c:	60 91 70 01 	lds	r22, 0x0170	; 0x800170 <HIGH_SCORE>
 690:	8d e1       	ldi	r24, 0x1D	; 29
 692:	9e ce       	rjmp	.-708    	; 0x3d0 <print_score>
 694:	08 95       	ret

00000696 <Snake_Dir_Tick>:
 696:	cf 93       	push	r28
 698:	df 93       	push	r29
 69a:	fc 01       	movw	r30, r24
 69c:	d0 b1       	in	r29, 0x00	; 0
 69e:	90 b1       	in	r25, 0x00	; 0
 6a0:	90 95       	com	r25
 6a2:	c9 2f       	mov	r28, r25
 6a4:	c0 71       	andi	r28, 0x10	; 16
 6a6:	e7 30       	cpi	r30, 0x07	; 7
 6a8:	f1 05       	cpc	r31, r1
 6aa:	08 f0       	brcs	.+2      	; 0x6ae <Snake_Dir_Tick+0x18>
 6ac:	84 c0       	rjmp	.+264    	; 0x7b6 <Snake_Dir_Tick+0x120>
 6ae:	ec 5a       	subi	r30, 0xAC	; 172
 6b0:	ff 4f       	sbci	r31, 0xFF	; 255
 6b2:	33 c2       	rjmp	.+1126   	; 0xb1a <__tablejump2__>
 6b4:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <snakeLength>
 6b8:	80 e0       	ldi	r24, 0x00	; 0
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	9e dd       	rcall	.-1220   	; 0x1fa <send>
 6be:	6f e1       	ldi	r22, 0x1F	; 31
 6c0:	71 e0       	ldi	r23, 0x01	; 1
 6c2:	80 e1       	ldi	r24, 0x10	; 16
 6c4:	fa dd       	rcall	.-1036   	; 0x2ba <LCD_DisplayString>
 6c6:	d3 ff       	sbrs	r29, 3
 6c8:	db c0       	rjmp	.+438    	; 0x880 <Snake_Dir_Tick+0x1ea>
 6ca:	31 e0       	ldi	r19, 0x01	; 1
 6cc:	20 e0       	ldi	r18, 0x00	; 0
 6ce:	c1 11       	cpse	r28, r1
 6d0:	01 c0       	rjmp	.+2      	; 0x6d4 <Snake_Dir_Tick+0x3e>
 6d2:	30 e0       	ldi	r19, 0x00	; 0
 6d4:	83 2f       	mov	r24, r19
 6d6:	92 2f       	mov	r25, r18
 6d8:	70 c0       	rjmp	.+224    	; 0x7ba <Snake_Dir_Tick+0x124>
 6da:	86 e0       	ldi	r24, 0x06	; 6
 6dc:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <i.2574>
 6e0:	83 e0       	ldi	r24, 0x03	; 3
 6e2:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <j.2575>
 6e6:	63 e0       	ldi	r22, 0x03	; 3
 6e8:	86 e0       	ldi	r24, 0x06	; 6
 6ea:	4b df       	rcall	.-362    	; 0x582 <add_body>
 6ec:	63 e0       	ldi	r22, 0x03	; 3
 6ee:	87 e0       	ldi	r24, 0x07	; 7
 6f0:	48 df       	rcall	.-368    	; 0x582 <add_body>
 6f2:	63 e0       	ldi	r22, 0x03	; 3
 6f4:	88 e0       	ldi	r24, 0x08	; 8
 6f6:	45 df       	rcall	.-374    	; 0x582 <add_body>
 6f8:	96 de       	rcall	.-724    	; 0x426 <add_fruit>
 6fa:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <j.2575>
 6fe:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <i.2574>
 702:	ac df       	rcall	.-168    	; 0x65c <updateGame>
 704:	72 c0       	rjmp	.+228    	; 0x7ea <Snake_Dir_Tick+0x154>
 706:	cc 23       	and	r28, r28
 708:	29 f0       	breq	.+10     	; 0x714 <Snake_Dir_Tick+0x7e>
 70a:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <snakeLength>
 70e:	81 e0       	ldi	r24, 0x01	; 1
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	c4 c0       	rjmp	.+392    	; 0x89c <Snake_Dir_Tick+0x206>
 714:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <Loser>
 718:	81 30       	cpi	r24, 0x01	; 1
 71a:	09 f4       	brne	.+2      	; 0x71e <Snake_Dir_Tick+0x88>
 71c:	b4 c0       	rjmp	.+360    	; 0x886 <Snake_Dir_Tick+0x1f0>
 71e:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <direction>
 722:	83 30       	cpi	r24, 0x03	; 3
 724:	09 f4       	brne	.+2      	; 0x728 <Snake_Dir_Tick+0x92>
 726:	86 c0       	rjmp	.+268    	; 0x834 <Snake_Dir_Tick+0x19e>
 728:	84 30       	cpi	r24, 0x04	; 4
 72a:	09 f0       	breq	.+2      	; 0x72e <Snake_Dir_Tick+0x98>
 72c:	71 c0       	rjmp	.+226    	; 0x810 <Snake_Dir_Tick+0x17a>
 72e:	95 c0       	rjmp	.+298    	; 0x85a <Snake_Dir_Tick+0x1c4>
 730:	cc 23       	and	r28, r28
 732:	29 f0       	breq	.+10     	; 0x73e <Snake_Dir_Tick+0xa8>
 734:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <snakeLength>
 738:	81 e0       	ldi	r24, 0x01	; 1
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	af c0       	rjmp	.+350    	; 0x89c <Snake_Dir_Tick+0x206>
 73e:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <Loser>
 742:	81 30       	cpi	r24, 0x01	; 1
 744:	09 f4       	brne	.+2      	; 0x748 <Snake_Dir_Tick+0xb2>
 746:	a2 c0       	rjmp	.+324    	; 0x88c <Snake_Dir_Tick+0x1f6>
 748:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <direction>
 74c:	83 30       	cpi	r24, 0x03	; 3
 74e:	09 f4       	brne	.+2      	; 0x752 <Snake_Dir_Tick+0xbc>
 750:	71 c0       	rjmp	.+226    	; 0x834 <Snake_Dir_Tick+0x19e>
 752:	84 30       	cpi	r24, 0x04	; 4
 754:	09 f0       	breq	.+2      	; 0x758 <Snake_Dir_Tick+0xc2>
 756:	49 c0       	rjmp	.+146    	; 0x7ea <Snake_Dir_Tick+0x154>
 758:	80 c0       	rjmp	.+256    	; 0x85a <Snake_Dir_Tick+0x1c4>
 75a:	cc 23       	and	r28, r28
 75c:	29 f0       	breq	.+10     	; 0x768 <Snake_Dir_Tick+0xd2>
 75e:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <snakeLength>
 762:	81 e0       	ldi	r24, 0x01	; 1
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	9a c0       	rjmp	.+308    	; 0x89c <Snake_Dir_Tick+0x206>
 768:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <Loser>
 76c:	81 30       	cpi	r24, 0x01	; 1
 76e:	09 f4       	brne	.+2      	; 0x772 <Snake_Dir_Tick+0xdc>
 770:	90 c0       	rjmp	.+288    	; 0x892 <Snake_Dir_Tick+0x1fc>
 772:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <direction>
 776:	81 30       	cpi	r24, 0x01	; 1
 778:	c1 f1       	breq	.+112    	; 0x7ea <Snake_Dir_Tick+0x154>
 77a:	82 30       	cpi	r24, 0x02	; 2
 77c:	09 f0       	breq	.+2      	; 0x780 <Snake_Dir_Tick+0xea>
 77e:	5a c0       	rjmp	.+180    	; 0x834 <Snake_Dir_Tick+0x19e>
 780:	47 c0       	rjmp	.+142    	; 0x810 <Snake_Dir_Tick+0x17a>
 782:	cc 23       	and	r28, r28
 784:	29 f0       	breq	.+10     	; 0x790 <Snake_Dir_Tick+0xfa>
 786:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <snakeLength>
 78a:	81 e0       	ldi	r24, 0x01	; 1
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	86 c0       	rjmp	.+268    	; 0x89c <Snake_Dir_Tick+0x206>
 790:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <Loser>
 794:	81 30       	cpi	r24, 0x01	; 1
 796:	09 f4       	brne	.+2      	; 0x79a <Snake_Dir_Tick+0x104>
 798:	7f c0       	rjmp	.+254    	; 0x898 <Snake_Dir_Tick+0x202>
 79a:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <direction>
 79e:	81 30       	cpi	r24, 0x01	; 1
 7a0:	21 f1       	breq	.+72     	; 0x7ea <Snake_Dir_Tick+0x154>
 7a2:	82 30       	cpi	r24, 0x02	; 2
 7a4:	09 f0       	breq	.+2      	; 0x7a8 <Snake_Dir_Tick+0x112>
 7a6:	59 c0       	rjmp	.+178    	; 0x85a <Snake_Dir_Tick+0x1c4>
 7a8:	33 c0       	rjmp	.+102    	; 0x810 <Snake_Dir_Tick+0x17a>
 7aa:	5f dd       	rcall	.-1346   	; 0x26a <LCD_ClearScreen>
 7ac:	6d e2       	ldi	r22, 0x2D	; 45
 7ae:	71 e0       	ldi	r23, 0x01	; 1
 7b0:	81 e0       	ldi	r24, 0x01	; 1
 7b2:	83 dd       	rcall	.-1274   	; 0x2ba <LCD_DisplayString>
 7b4:	15 c0       	rjmp	.+42     	; 0x7e0 <Snake_Dir_Tick+0x14a>
 7b6:	80 e0       	ldi	r24, 0x00	; 0
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	83 30       	cpi	r24, 0x03	; 3
 7bc:	91 05       	cpc	r25, r1
 7be:	41 f1       	breq	.+80     	; 0x810 <Snake_Dir_Tick+0x17a>
 7c0:	3c f4       	brge	.+14     	; 0x7d0 <Snake_Dir_Tick+0x13a>
 7c2:	00 97       	sbiw	r24, 0x00	; 0
 7c4:	69 f0       	breq	.+26     	; 0x7e0 <Snake_Dir_Tick+0x14a>
 7c6:	82 30       	cpi	r24, 0x02	; 2
 7c8:	91 05       	cpc	r25, r1
 7ca:	09 f0       	breq	.+2      	; 0x7ce <Snake_Dir_Tick+0x138>
 7cc:	67 c0       	rjmp	.+206    	; 0x89c <Snake_Dir_Tick+0x206>
 7ce:	0d c0       	rjmp	.+26     	; 0x7ea <Snake_Dir_Tick+0x154>
 7d0:	84 30       	cpi	r24, 0x04	; 4
 7d2:	91 05       	cpc	r25, r1
 7d4:	79 f1       	breq	.+94     	; 0x834 <Snake_Dir_Tick+0x19e>
 7d6:	85 30       	cpi	r24, 0x05	; 5
 7d8:	91 05       	cpc	r25, r1
 7da:	09 f4       	brne	.+2      	; 0x7de <Snake_Dir_Tick+0x148>
 7dc:	3e c0       	rjmp	.+124    	; 0x85a <Snake_Dir_Tick+0x1c4>
 7de:	5e c0       	rjmp	.+188    	; 0x89c <Snake_Dir_Tick+0x206>
 7e0:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <Loser>
 7e4:	80 e0       	ldi	r24, 0x00	; 0
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	59 c0       	rjmp	.+178    	; 0x89c <Snake_Dir_Tick+0x206>
 7ea:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <i.2574>
 7ee:	81 11       	cpse	r24, r1
 7f0:	04 c0       	rjmp	.+8      	; 0x7fa <Snake_Dir_Tick+0x164>
 7f2:	88 e0       	ldi	r24, 0x08	; 8
 7f4:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <i.2574>
 7f8:	03 c0       	rjmp	.+6      	; 0x800 <Snake_Dir_Tick+0x16a>
 7fa:	81 50       	subi	r24, 0x01	; 1
 7fc:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <i.2574>
 800:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <j.2575>
 804:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <i.2574>
 808:	29 df       	rcall	.-430    	; 0x65c <updateGame>
 80a:	82 e0       	ldi	r24, 0x02	; 2
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	46 c0       	rjmp	.+140    	; 0x89c <Snake_Dir_Tick+0x206>
 810:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <i.2574>
 814:	88 30       	cpi	r24, 0x08	; 8
 816:	18 f0       	brcs	.+6      	; 0x81e <Snake_Dir_Tick+0x188>
 818:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <i.2574>
 81c:	03 c0       	rjmp	.+6      	; 0x824 <Snake_Dir_Tick+0x18e>
 81e:	8f 5f       	subi	r24, 0xFF	; 255
 820:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <i.2574>
 824:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <j.2575>
 828:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <i.2574>
 82c:	17 df       	rcall	.-466    	; 0x65c <updateGame>
 82e:	83 e0       	ldi	r24, 0x03	; 3
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	34 c0       	rjmp	.+104    	; 0x89c <Snake_Dir_Tick+0x206>
 834:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <j.2575>
 838:	81 11       	cpse	r24, r1
 83a:	04 c0       	rjmp	.+8      	; 0x844 <Snake_Dir_Tick+0x1ae>
 83c:	88 e0       	ldi	r24, 0x08	; 8
 83e:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <j.2575>
 842:	03 c0       	rjmp	.+6      	; 0x84a <Snake_Dir_Tick+0x1b4>
 844:	81 50       	subi	r24, 0x01	; 1
 846:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <j.2575>
 84a:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <j.2575>
 84e:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <i.2574>
 852:	04 df       	rcall	.-504    	; 0x65c <updateGame>
 854:	84 e0       	ldi	r24, 0x04	; 4
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	21 c0       	rjmp	.+66     	; 0x89c <Snake_Dir_Tick+0x206>
 85a:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <j.2575>
 85e:	88 30       	cpi	r24, 0x08	; 8
 860:	20 f0       	brcs	.+8      	; 0x86a <Snake_Dir_Tick+0x1d4>
 862:	81 e0       	ldi	r24, 0x01	; 1
 864:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <j.2575>
 868:	03 c0       	rjmp	.+6      	; 0x870 <Snake_Dir_Tick+0x1da>
 86a:	8f 5f       	subi	r24, 0xFF	; 255
 86c:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <j.2575>
 870:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <j.2575>
 874:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <i.2574>
 878:	f1 de       	rcall	.-542    	; 0x65c <updateGame>
 87a:	85 e0       	ldi	r24, 0x05	; 5
 87c:	90 e0       	ldi	r25, 0x00	; 0
 87e:	0e c0       	rjmp	.+28     	; 0x89c <Snake_Dir_Tick+0x206>
 880:	81 e0       	ldi	r24, 0x01	; 1
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	0b c0       	rjmp	.+22     	; 0x89c <Snake_Dir_Tick+0x206>
 886:	86 e0       	ldi	r24, 0x06	; 6
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	08 c0       	rjmp	.+16     	; 0x89c <Snake_Dir_Tick+0x206>
 88c:	86 e0       	ldi	r24, 0x06	; 6
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	05 c0       	rjmp	.+10     	; 0x89c <Snake_Dir_Tick+0x206>
 892:	86 e0       	ldi	r24, 0x06	; 6
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	02 c0       	rjmp	.+4      	; 0x89c <Snake_Dir_Tick+0x206>
 898:	86 e0       	ldi	r24, 0x06	; 6
 89a:	90 e0       	ldi	r25, 0x00	; 0
 89c:	df 91       	pop	r29
 89e:	cf 91       	pop	r28
 8a0:	08 95       	ret

000008a2 <EEPROM_write>:
 8a2:	f9 99       	sbic	0x1f, 1	; 31
 8a4:	fe cf       	rjmp	.-4      	; 0x8a2 <EEPROM_write>
 8a6:	1f ba       	out	0x1f, r1	; 31
 8a8:	92 bd       	out	0x22, r25	; 34
 8aa:	81 bd       	out	0x21, r24	; 33
 8ac:	60 bd       	out	0x20, r22	; 32
 8ae:	fa 9a       	sbi	0x1f, 2	; 31
 8b0:	f9 9a       	sbi	0x1f, 1	; 31
 8b2:	08 95       	ret

000008b4 <EEPROM_read>:
 8b4:	f9 99       	sbic	0x1f, 1	; 31
 8b6:	fe cf       	rjmp	.-4      	; 0x8b4 <EEPROM_read>
 8b8:	92 bd       	out	0x22, r25	; 34
 8ba:	81 bd       	out	0x21, r24	; 33
 8bc:	f8 9a       	sbi	0x1f, 0	; 31
 8be:	80 b5       	in	r24, 0x20	; 32
 8c0:	08 95       	ret

000008c2 <Set_HighScore_Tick>:
 8c2:	82 30       	cpi	r24, 0x02	; 2
 8c4:	91 05       	cpc	r25, r1
 8c6:	09 f1       	breq	.+66     	; 0x90a <Set_HighScore_Tick+0x48>
 8c8:	2c f4       	brge	.+10     	; 0x8d4 <Set_HighScore_Tick+0x12>
 8ca:	00 97       	sbiw	r24, 0x00	; 0
 8cc:	59 f0       	breq	.+22     	; 0x8e4 <Set_HighScore_Tick+0x22>
 8ce:	01 97       	sbiw	r24, 0x01	; 1
 8d0:	91 f0       	breq	.+36     	; 0x8f6 <Set_HighScore_Tick+0x34>
 8d2:	05 c0       	rjmp	.+10     	; 0x8de <Set_HighScore_Tick+0x1c>
 8d4:	83 30       	cpi	r24, 0x03	; 3
 8d6:	91 05       	cpc	r25, r1
 8d8:	31 f1       	breq	.+76     	; 0x926 <Set_HighScore_Tick+0x64>
 8da:	04 97       	sbiw	r24, 0x04	; 4
 8dc:	71 f1       	breq	.+92     	; 0x93a <Set_HighScore_Tick+0x78>
 8de:	80 e0       	ldi	r24, 0x00	; 0
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	08 95       	ret
 8e4:	61 e1       	ldi	r22, 0x11	; 17
 8e6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <EEPROM_Address>
 8ea:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <EEPROM_Address+0x1>
 8ee:	d9 df       	rcall	.-78     	; 0x8a2 <EEPROM_write>
 8f0:	81 e0       	ldi	r24, 0x01	; 1
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	08 95       	ret
 8f6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <EEPROM_Address>
 8fa:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <EEPROM_Address+0x1>
 8fe:	da df       	rcall	.-76     	; 0x8b4 <EEPROM_read>
 900:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <HIGH_SCORE>
 904:	82 e0       	ldi	r24, 0x02	; 2
 906:	90 e0       	ldi	r25, 0x00	; 0
 908:	08 95       	ret
 90a:	60 91 73 02 	lds	r22, 0x0273	; 0x800273 <Game_Score>
 90e:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <HIGH_SCORE>
 912:	26 17       	cp	r18, r22
 914:	a0 f4       	brcc	.+40     	; 0x93e <Set_HighScore_Tick+0x7c>
 916:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <EEPROM_Address>
 91a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <EEPROM_Address+0x1>
 91e:	c1 df       	rcall	.-126    	; 0x8a2 <EEPROM_write>
 920:	83 e0       	ldi	r24, 0x03	; 3
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	08 95       	ret
 926:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <EEPROM_Address>
 92a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <EEPROM_Address+0x1>
 92e:	c2 df       	rcall	.-124    	; 0x8b4 <EEPROM_read>
 930:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <HIGH_SCORE>
 934:	84 e0       	ldi	r24, 0x04	; 4
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	08 95       	ret
 93a:	82 e0       	ldi	r24, 0x02	; 2
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	08 95       	ret

00000940 <main>:


int main(void) {
 940:	cf 93       	push	r28
 942:	df 93       	push	r29
 944:	cd b7       	in	r28, 0x3d	; 61
 946:	de b7       	in	r29, 0x3e	; 62
 948:	28 97       	sbiw	r28, 0x08	; 8
 94a:	0f b6       	in	r0, 0x3f	; 63
 94c:	f8 94       	cli
 94e:	de bf       	out	0x3e, r29	; 62
 950:	0f be       	out	0x3f, r0	; 63
 952:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0x00; PORTA = 0xFF;
 954:	11 b8       	out	0x01, r1	; 1
 956:	1f ef       	ldi	r17, 0xFF	; 255
 958:	12 b9       	out	0x02, r17	; 2
	DDRB = 0xFF; PORTB = 0x00;
 95a:	14 b9       	out	0x04, r17	; 4
 95c:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00;
 95e:	17 b9       	out	0x07, r17	; 7
 960:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
 962:	1a b9       	out	0x0a, r17	; 10
 964:	1b b8       	out	0x0b, r1	; 11
	LCD_init();	
 966:	8d dc       	rcall	.-1766   	; 0x282 <LCD_init>
	ADC_init();
 968:	d9 dc       	rcall	.-1614   	; 0x31c <ADC_init>
 96a:	89 e1       	ldi	r24, 0x19	; 25
	srand(time(25));
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	c1 db       	rcall	.-2174   	; 0xf2 <time>
 970:	cb 01       	movw	r24, r22
 972:	3a d1       	rcall	.+628    	; 0xbe8 <srand>
 974:	88 e0       	ldi	r24, 0x08	; 8
	static task task1;
	static task task2;
	static task task3;
	static task task5;
	
	task *tasks[] = { &task5, &task3, &task1, &task2 };
 976:	ea e0       	ldi	r30, 0x0A	; 10
 978:	f1 e0       	ldi	r31, 0x01	; 1
 97a:	de 01       	movw	r26, r28
 97c:	11 96       	adiw	r26, 0x01	; 1
 97e:	01 90       	ld	r0, Z+
 980:	0d 92       	st	X+, r0
 982:	8a 95       	dec	r24
 984:	e1 f7       	brne	.-8      	; 0x97e <main+0x3e>
 986:	eb e5       	ldi	r30, 0x5B	; 91
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	// Task 1
	task1.state = -1;//Task initial state.
 988:	f1 e0       	ldi	r31, 0x01	; 1
 98a:	10 83       	st	Z, r17
 98c:	8d e7       	ldi	r24, 0x7D	; 125
	task1.period = Snake_Dir_Tick_period;//Task Period.
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	a0 e0       	ldi	r26, 0x00	; 0
 992:	b0 e0       	ldi	r27, 0x00	; 0
 994:	81 83       	std	Z+1, r24	; 0x01
 996:	92 83       	std	Z+2, r25	; 0x02
 998:	a3 83       	std	Z+3, r26	; 0x03
 99a:	b4 83       	std	Z+4, r27	; 0x04
 99c:	85 83       	std	Z+5, r24	; 0x05
	task1.elapsedTime = Snake_Dir_Tick_period;//Task current elapsed time.
 99e:	96 83       	std	Z+6, r25	; 0x06
 9a0:	a7 83       	std	Z+7, r26	; 0x07
 9a2:	b0 87       	std	Z+8, r27	; 0x08
 9a4:	8b e4       	ldi	r24, 0x4B	; 75
	task1.TickFct = &Snake_Dir_Tick;//Function pointer for the tick.
 9a6:	93 e0       	ldi	r25, 0x03	; 3
 9a8:	92 87       	std	Z+10, r25	; 0x0a
 9aa:	81 87       	std	Z+9, r24	; 0x09
 9ac:	e0 e5       	ldi	r30, 0x50	; 80
	
	task2.state = -1;//Task initial state.
 9ae:	f1 e0       	ldi	r31, 0x01	; 1
 9b0:	10 83       	st	Z, r17
 9b2:	81 e0       	ldi	r24, 0x01	; 1
	task2.period = PrintSnake_Tick_period;//Task Period.
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	a0 e0       	ldi	r26, 0x00	; 0
 9b8:	b0 e0       	ldi	r27, 0x00	; 0
 9ba:	81 83       	std	Z+1, r24	; 0x01
 9bc:	92 83       	std	Z+2, r25	; 0x02
 9be:	a3 83       	std	Z+3, r26	; 0x03
 9c0:	b4 83       	std	Z+4, r27	; 0x04
 9c2:	85 83       	std	Z+5, r24	; 0x05
	task2.elapsedTime = PrintSnake_Tick_period;//Task current elapsed time.
 9c4:	96 83       	std	Z+6, r25	; 0x06
 9c6:	a7 83       	std	Z+7, r26	; 0x07
 9c8:	b0 87       	std	Z+8, r27	; 0x08
 9ca:	80 e9       	ldi	r24, 0x90	; 144
	task2.TickFct = &PrintSnake_Tick;//Function pointer for the tick.
 9cc:	92 e0       	ldi	r25, 0x02	; 2
 9ce:	92 87       	std	Z+10, r25	; 0x0a
 9d0:	81 87       	std	Z+9, r24	; 0x09
 9d2:	e5 e4       	ldi	r30, 0x45	; 69
	
	task3.state = -1;//Task initial state.
 9d4:	f1 e0       	ldi	r31, 0x01	; 1
 9d6:	10 83       	st	Z, r17
 9d8:	8a e0       	ldi	r24, 0x0A	; 10
	task3.period = GetADC_Tick_period;//Task Period.
 9da:	90 e0       	ldi	r25, 0x00	; 0
 9dc:	a0 e0       	ldi	r26, 0x00	; 0
 9de:	b0 e0       	ldi	r27, 0x00	; 0
 9e0:	81 83       	std	Z+1, r24	; 0x01
 9e2:	92 83       	std	Z+2, r25	; 0x02
 9e4:	a3 83       	std	Z+3, r26	; 0x03
 9e6:	b4 83       	std	Z+4, r27	; 0x04
 9e8:	85 83       	std	Z+5, r24	; 0x05
	task3.elapsedTime = GetADC_Tick_period;//Task current elapsed time.
 9ea:	96 83       	std	Z+6, r25	; 0x06
 9ec:	a7 83       	std	Z+7, r26	; 0x07
 9ee:	b0 87       	std	Z+8, r27	; 0x08
 9f0:	8f ea       	ldi	r24, 0xAF	; 175
	task3.TickFct = &GetADC_Tick;//Function pointer for the tick.
 9f2:	91 e0       	ldi	r25, 0x01	; 1
 9f4:	92 87       	std	Z+10, r25	; 0x0a
 9f6:	81 87       	std	Z+9, r24	; 0x09
 9f8:	ea e3       	ldi	r30, 0x3A	; 58
	
	task5.state = -1;//Task initial state.
 9fa:	f1 e0       	ldi	r31, 0x01	; 1
 9fc:	10 83       	st	Z, r17
 9fe:	85 e0       	ldi	r24, 0x05	; 5
	task5.period = Set_HighScore_Tick_Period;//Task Period.
 a00:	90 e0       	ldi	r25, 0x00	; 0
 a02:	a0 e0       	ldi	r26, 0x00	; 0
 a04:	b0 e0       	ldi	r27, 0x00	; 0
 a06:	81 83       	std	Z+1, r24	; 0x01
 a08:	92 83       	std	Z+2, r25	; 0x02
 a0a:	a3 83       	std	Z+3, r26	; 0x03
 a0c:	b4 83       	std	Z+4, r27	; 0x04
 a0e:	85 83       	std	Z+5, r24	; 0x05
	task5.elapsedTime = Set_HighScore_Tick_Period;//Task current elapsed time.
 a10:	96 83       	std	Z+6, r25	; 0x06
 a12:	a7 83       	std	Z+7, r26	; 0x07
 a14:	b0 87       	std	Z+8, r27	; 0x08
 a16:	81 e6       	ldi	r24, 0x61	; 97
	task5.TickFct = &Set_HighScore_Tick;//Function pointer for the tick.
 a18:	94 e0       	ldi	r25, 0x04	; 4
 a1a:	92 87       	std	Z+10, r25	; 0x0a
 a1c:	81 87       	std	Z+9, r24	; 0x09
 a1e:	61 e0       	ldi	r22, 0x01	; 1

	// Set the timer and turn it on
	TimerSet(GCD);
 a20:	70 e0       	ldi	r23, 0x00	; 0
 a22:	80 e0       	ldi	r24, 0x00	; 0
 a24:	90 e0       	ldi	r25, 0x00	; 0
 a26:	78 db       	rcall	.-2320   	; 0x118 <TimerSet>
	TimerOn();
 a28:	88 db       	rcall	.-2288   	; 0x13a <TimerOn>
 a2a:	7e 01       	movw	r14, r28
 a2c:	89 e0       	ldi	r24, 0x09	; 9
 a2e:	e8 0e       	add	r14, r24
 a30:	f1 1c       	adc	r15, r1
 a32:	de 01       	movw	r26, r28
 a34:	11 96       	adiw	r26, 0x01	; 1
 a36:	6d 01       	movw	r12, r26
 a38:	f6 01       	movw	r30, r12
	unsigned short i; // Scheduler for-loop iterator
	while(1) {
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
 a3a:	01 91       	ld	r16, Z+
 a3c:	11 91       	ld	r17, Z+
 a3e:	6f 01       	movw	r12, r30
 a40:	d8 01       	movw	r26, r16
 a42:	15 96       	adiw	r26, 0x05	; 5
 a44:	4d 91       	ld	r20, X+
 a46:	5d 91       	ld	r21, X+
 a48:	6d 91       	ld	r22, X+
 a4a:	7c 91       	ld	r23, X
 a4c:	18 97       	sbiw	r26, 0x08	; 8
 a4e:	11 96       	adiw	r26, 0x01	; 1
 a50:	8d 91       	ld	r24, X+
 a52:	9d 91       	ld	r25, X+
 a54:	0d 90       	ld	r0, X+
 a56:	bc 91       	ld	r27, X
 a58:	a0 2d       	mov	r26, r0
 a5a:	48 17       	cp	r20, r24
 a5c:	59 07       	cpc	r21, r25
 a5e:	6a 07       	cpc	r22, r26
 a60:	7b 07       	cpc	r23, r27
 a62:	81 f4       	brne	.+32     	; 0xa84 <main+0x144>
 a64:	f8 01       	movw	r30, r16
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 a66:	80 81       	ld	r24, Z
 a68:	01 84       	ldd	r0, Z+9	; 0x09
 a6a:	f2 85       	ldd	r31, Z+10	; 0x0a
 a6c:	e0 2d       	mov	r30, r0
 a6e:	08 2e       	mov	r0, r24
 a70:	00 0c       	add	r0, r0
 a72:	99 0b       	sbc	r25, r25
 a74:	09 95       	icall
 a76:	d8 01       	movw	r26, r16
 a78:	8c 93       	st	X, r24
 a7a:	f8 01       	movw	r30, r16
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
 a7c:	15 82       	std	Z+5, r1	; 0x05
 a7e:	16 82       	std	Z+6, r1	; 0x06
 a80:	17 82       	std	Z+7, r1	; 0x07
 a82:	10 86       	std	Z+8, r1	; 0x08
 a84:	f8 01       	movw	r30, r16
			}
			tasks[i]->elapsedTime += 1;
 a86:	85 81       	ldd	r24, Z+5	; 0x05
 a88:	96 81       	ldd	r25, Z+6	; 0x06
 a8a:	a7 81       	ldd	r26, Z+7	; 0x07
 a8c:	b0 85       	ldd	r27, Z+8	; 0x08
 a8e:	01 96       	adiw	r24, 0x01	; 1
 a90:	a1 1d       	adc	r26, r1
 a92:	b1 1d       	adc	r27, r1
 a94:	85 83       	std	Z+5, r24	; 0x05
 a96:	96 83       	std	Z+6, r25	; 0x06
 a98:	a7 83       	std	Z+7, r26	; 0x07
 a9a:	b0 87       	std	Z+8, r27	; 0x08
 a9c:	ec 14       	cp	r14, r12
	TimerOn();

	unsigned short i; // Scheduler for-loop iterator
	while(1) {
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
 a9e:	fd 04       	cpc	r15, r13
 aa0:	59 f6       	brne	.-106    	; 0xa38 <main+0xf8>
 aa2:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <TimerFlag>
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
 aa6:	88 23       	and	r24, r24
 aa8:	e1 f3       	breq	.-8      	; 0xaa2 <main+0x162>
 aaa:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <TimerFlag>
		TimerFlag = 0;
 aae:	c1 cf       	rjmp	.-126    	; 0xa32 <main+0xf2>

00000ab0 <__divmodhi4>:
			
	}
 ab0:	97 fb       	bst	r25, 7
 ab2:	07 2e       	mov	r0, r23
 ab4:	16 f4       	brtc	.+4      	; 0xaba <__divmodhi4+0xa>
 ab6:	00 94       	com	r0
 ab8:	06 d0       	rcall	.+12     	; 0xac6 <__divmodhi4_neg1>
 aba:	77 fd       	sbrc	r23, 7
 abc:	08 d0       	rcall	.+16     	; 0xace <__divmodhi4_neg2>
 abe:	36 d0       	rcall	.+108    	; 0xb2c <__udivmodhi4>
 ac0:	07 fc       	sbrc	r0, 7
 ac2:	05 d0       	rcall	.+10     	; 0xace <__divmodhi4_neg2>
 ac4:	3e f4       	brtc	.+14     	; 0xad4 <__divmodhi4_exit>

00000ac6 <__divmodhi4_neg1>:
 ac6:	90 95       	com	r25
 ac8:	81 95       	neg	r24
 aca:	9f 4f       	sbci	r25, 0xFF	; 255
 acc:	08 95       	ret

00000ace <__divmodhi4_neg2>:
 ace:	70 95       	com	r23
 ad0:	61 95       	neg	r22
 ad2:	7f 4f       	sbci	r23, 0xFF	; 255

00000ad4 <__divmodhi4_exit>:
 ad4:	08 95       	ret

00000ad6 <__udivmodsi4>:
 ad6:	a1 e2       	ldi	r26, 0x21	; 33
 ad8:	1a 2e       	mov	r1, r26
 ada:	aa 1b       	sub	r26, r26
 adc:	bb 1b       	sub	r27, r27
 ade:	fd 01       	movw	r30, r26
 ae0:	0d c0       	rjmp	.+26     	; 0xafc <__udivmodsi4_ep>

00000ae2 <__udivmodsi4_loop>:
 ae2:	aa 1f       	adc	r26, r26
 ae4:	bb 1f       	adc	r27, r27
 ae6:	ee 1f       	adc	r30, r30
 ae8:	ff 1f       	adc	r31, r31
 aea:	a2 17       	cp	r26, r18
 aec:	b3 07       	cpc	r27, r19
 aee:	e4 07       	cpc	r30, r20
 af0:	f5 07       	cpc	r31, r21
 af2:	20 f0       	brcs	.+8      	; 0xafc <__udivmodsi4_ep>
 af4:	a2 1b       	sub	r26, r18
 af6:	b3 0b       	sbc	r27, r19
 af8:	e4 0b       	sbc	r30, r20
 afa:	f5 0b       	sbc	r31, r21

00000afc <__udivmodsi4_ep>:
 afc:	66 1f       	adc	r22, r22
 afe:	77 1f       	adc	r23, r23
 b00:	88 1f       	adc	r24, r24
 b02:	99 1f       	adc	r25, r25
 b04:	1a 94       	dec	r1
 b06:	69 f7       	brne	.-38     	; 0xae2 <__udivmodsi4_loop>
 b08:	60 95       	com	r22
 b0a:	70 95       	com	r23
 b0c:	80 95       	com	r24
 b0e:	90 95       	com	r25
 b10:	9b 01       	movw	r18, r22
 b12:	ac 01       	movw	r20, r24
 b14:	bd 01       	movw	r22, r26
 b16:	cf 01       	movw	r24, r30
 b18:	08 95       	ret

00000b1a <__tablejump2__>:
 b1a:	ee 0f       	add	r30, r30
 b1c:	ff 1f       	adc	r31, r31
 b1e:	00 24       	eor	r0, r0
 b20:	00 1c       	adc	r0, r0
 b22:	0b be       	out	0x3b, r0	; 59
 b24:	07 90       	elpm	r0, Z+
 b26:	f6 91       	elpm	r31, Z
 b28:	e0 2d       	mov	r30, r0
 b2a:	09 94       	ijmp

00000b2c <__udivmodhi4>:
 b2c:	aa 1b       	sub	r26, r26
 b2e:	bb 1b       	sub	r27, r27
 b30:	51 e1       	ldi	r21, 0x11	; 17
 b32:	07 c0       	rjmp	.+14     	; 0xb42 <__udivmodhi4_ep>

00000b34 <__udivmodhi4_loop>:
 b34:	aa 1f       	adc	r26, r26
 b36:	bb 1f       	adc	r27, r27
 b38:	a6 17       	cp	r26, r22
 b3a:	b7 07       	cpc	r27, r23
 b3c:	10 f0       	brcs	.+4      	; 0xb42 <__udivmodhi4_ep>
 b3e:	a6 1b       	sub	r26, r22
 b40:	b7 0b       	sbc	r27, r23

00000b42 <__udivmodhi4_ep>:
 b42:	88 1f       	adc	r24, r24
 b44:	99 1f       	adc	r25, r25
 b46:	5a 95       	dec	r21
 b48:	a9 f7       	brne	.-22     	; 0xb34 <__udivmodhi4_loop>
 b4a:	80 95       	com	r24
 b4c:	90 95       	com	r25
 b4e:	bc 01       	movw	r22, r24
 b50:	cd 01       	movw	r24, r26
 b52:	08 95       	ret

00000b54 <do_rand>:
 b54:	8f 92       	push	r8
 b56:	9f 92       	push	r9
 b58:	af 92       	push	r10
 b5a:	bf 92       	push	r11
 b5c:	cf 92       	push	r12
 b5e:	df 92       	push	r13
 b60:	ef 92       	push	r14
 b62:	ff 92       	push	r15
 b64:	cf 93       	push	r28
 b66:	df 93       	push	r29
 b68:	ec 01       	movw	r28, r24
 b6a:	68 81       	ld	r22, Y
 b6c:	79 81       	ldd	r23, Y+1	; 0x01
 b6e:	8a 81       	ldd	r24, Y+2	; 0x02
 b70:	9b 81       	ldd	r25, Y+3	; 0x03
 b72:	61 15       	cp	r22, r1
 b74:	71 05       	cpc	r23, r1
 b76:	81 05       	cpc	r24, r1
 b78:	91 05       	cpc	r25, r1
 b7a:	21 f4       	brne	.+8      	; 0xb84 <do_rand+0x30>
 b7c:	64 e2       	ldi	r22, 0x24	; 36
 b7e:	79 ed       	ldi	r23, 0xD9	; 217
 b80:	8b e5       	ldi	r24, 0x5B	; 91
 b82:	97 e0       	ldi	r25, 0x07	; 7
 b84:	2d e1       	ldi	r18, 0x1D	; 29
 b86:	33 ef       	ldi	r19, 0xF3	; 243
 b88:	41 e0       	ldi	r20, 0x01	; 1
 b8a:	50 e0       	ldi	r21, 0x00	; 0
 b8c:	38 d0       	rcall	.+112    	; 0xbfe <__divmodsi4>
 b8e:	49 01       	movw	r8, r18
 b90:	5a 01       	movw	r10, r20
 b92:	9b 01       	movw	r18, r22
 b94:	ac 01       	movw	r20, r24
 b96:	a7 ea       	ldi	r26, 0xA7	; 167
 b98:	b1 e4       	ldi	r27, 0x41	; 65
 b9a:	4d d0       	rcall	.+154    	; 0xc36 <__muluhisi3>
 b9c:	6b 01       	movw	r12, r22
 b9e:	7c 01       	movw	r14, r24
 ba0:	ac ee       	ldi	r26, 0xEC	; 236
 ba2:	b4 ef       	ldi	r27, 0xF4	; 244
 ba4:	a5 01       	movw	r20, r10
 ba6:	94 01       	movw	r18, r8
 ba8:	52 d0       	rcall	.+164    	; 0xc4e <__mulohisi3>
 baa:	dc 01       	movw	r26, r24
 bac:	cb 01       	movw	r24, r22
 bae:	8c 0d       	add	r24, r12
 bb0:	9d 1d       	adc	r25, r13
 bb2:	ae 1d       	adc	r26, r14
 bb4:	bf 1d       	adc	r27, r15
 bb6:	b7 ff       	sbrs	r27, 7
 bb8:	03 c0       	rjmp	.+6      	; 0xbc0 <do_rand+0x6c>
 bba:	01 97       	sbiw	r24, 0x01	; 1
 bbc:	a1 09       	sbc	r26, r1
 bbe:	b0 48       	sbci	r27, 0x80	; 128
 bc0:	88 83       	st	Y, r24
 bc2:	99 83       	std	Y+1, r25	; 0x01
 bc4:	aa 83       	std	Y+2, r26	; 0x02
 bc6:	bb 83       	std	Y+3, r27	; 0x03
 bc8:	9f 77       	andi	r25, 0x7F	; 127
 bca:	df 91       	pop	r29
 bcc:	cf 91       	pop	r28
 bce:	ff 90       	pop	r15
 bd0:	ef 90       	pop	r14
 bd2:	df 90       	pop	r13
 bd4:	cf 90       	pop	r12
 bd6:	bf 90       	pop	r11
 bd8:	af 90       	pop	r10
 bda:	9f 90       	pop	r9
 bdc:	8f 90       	pop	r8
 bde:	08 95       	ret

00000be0 <rand_r>:
 be0:	b9 cf       	rjmp	.-142    	; 0xb54 <do_rand>

00000be2 <rand>:
 be2:	80 e0       	ldi	r24, 0x00	; 0
 be4:	91 e0       	ldi	r25, 0x01	; 1
 be6:	b6 cf       	rjmp	.-148    	; 0xb54 <do_rand>

00000be8 <srand>:
 be8:	a0 e0       	ldi	r26, 0x00	; 0
 bea:	b0 e0       	ldi	r27, 0x00	; 0
 bec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 bf0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 bf4:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 bf8:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 bfc:	08 95       	ret

00000bfe <__divmodsi4>:
 bfe:	05 2e       	mov	r0, r21
 c00:	97 fb       	bst	r25, 7
 c02:	16 f4       	brtc	.+4      	; 0xc08 <__divmodsi4+0xa>
 c04:	00 94       	com	r0
 c06:	0f d0       	rcall	.+30     	; 0xc26 <__negsi2>
 c08:	57 fd       	sbrc	r21, 7
 c0a:	05 d0       	rcall	.+10     	; 0xc16 <__divmodsi4_neg2>
 c0c:	64 df       	rcall	.-312    	; 0xad6 <__udivmodsi4>
 c0e:	07 fc       	sbrc	r0, 7
 c10:	02 d0       	rcall	.+4      	; 0xc16 <__divmodsi4_neg2>
 c12:	46 f4       	brtc	.+16     	; 0xc24 <__divmodsi4_exit>
 c14:	08 c0       	rjmp	.+16     	; 0xc26 <__negsi2>

00000c16 <__divmodsi4_neg2>:
 c16:	50 95       	com	r21
 c18:	40 95       	com	r20
 c1a:	30 95       	com	r19
 c1c:	21 95       	neg	r18
 c1e:	3f 4f       	sbci	r19, 0xFF	; 255
 c20:	4f 4f       	sbci	r20, 0xFF	; 255
 c22:	5f 4f       	sbci	r21, 0xFF	; 255

00000c24 <__divmodsi4_exit>:
 c24:	08 95       	ret

00000c26 <__negsi2>:
 c26:	90 95       	com	r25
 c28:	80 95       	com	r24
 c2a:	70 95       	com	r23
 c2c:	61 95       	neg	r22
 c2e:	7f 4f       	sbci	r23, 0xFF	; 255
 c30:	8f 4f       	sbci	r24, 0xFF	; 255
 c32:	9f 4f       	sbci	r25, 0xFF	; 255
 c34:	08 95       	ret

00000c36 <__muluhisi3>:
 c36:	0f d0       	rcall	.+30     	; 0xc56 <__umulhisi3>
 c38:	a5 9f       	mul	r26, r21
 c3a:	90 0d       	add	r25, r0
 c3c:	b4 9f       	mul	r27, r20
 c3e:	90 0d       	add	r25, r0
 c40:	a4 9f       	mul	r26, r20
 c42:	80 0d       	add	r24, r0
 c44:	91 1d       	adc	r25, r1
 c46:	11 24       	eor	r1, r1
 c48:	08 95       	ret

00000c4a <__mulshisi3>:
 c4a:	b7 ff       	sbrs	r27, 7
 c4c:	f4 cf       	rjmp	.-24     	; 0xc36 <__muluhisi3>

00000c4e <__mulohisi3>:
 c4e:	f3 df       	rcall	.-26     	; 0xc36 <__muluhisi3>
 c50:	82 1b       	sub	r24, r18
 c52:	93 0b       	sbc	r25, r19
 c54:	08 95       	ret

00000c56 <__umulhisi3>:
 c56:	a2 9f       	mul	r26, r18
 c58:	b0 01       	movw	r22, r0
 c5a:	b3 9f       	mul	r27, r19
 c5c:	c0 01       	movw	r24, r0
 c5e:	a3 9f       	mul	r26, r19
 c60:	70 0d       	add	r23, r0
 c62:	81 1d       	adc	r24, r1
 c64:	11 24       	eor	r1, r1
 c66:	91 1d       	adc	r25, r1
 c68:	b2 9f       	mul	r27, r18
 c6a:	70 0d       	add	r23, r0
 c6c:	81 1d       	adc	r24, r1
 c6e:	11 24       	eor	r1, r1
 c70:	91 1d       	adc	r25, r1
 c72:	08 95       	ret

00000c74 <_exit>:
 c74:	f8 94       	cli

00000c76 <__stop_program>:
 c76:	ff cf       	rjmp	.-2      	; 0xc76 <__stop_program>
